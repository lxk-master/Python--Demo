'''
循环
    程序的三大流程
        顺序 -- 从上到下,顺序执行代码
        分支 -- 根据条件判断,决定执行代码的分支
        循环 -- 让特定代码重复执行
    while循环基本使用
        循环的作用就是让指定的代码重复的执行
        while循环最常用的场景就是让执行的代码按照指定的次数重复执行
        while语句基本语法
            初始条件设置 -- 通常是重复执行的计数器
            while 条件(判断计数器是否达到目标次数):
                条件满足时做的事情1
                条件满足时做的事情2
                条件满足时做的事情3
                ...
                处理条件(计数器 + 1)
            注意: while语句及缩进的代码时一个完整的代码块
        死循环:
            由于程序员的原因,忘记在循环内部修改循环的判断条件,导致程序持续执行,循环无法终止
        Python中的计数方法
            自然计数法(从1开始) ---更符合人类的习惯
            程序计数法(从0开始) ---几乎所有的程序语言都选择从0开始计数
            在编写程序时,应该尽量养成习惯: 除非需求的特殊要求,否则循环的计数都从0开始
        循环计算
            在程序开发中,经常会遇到利用循环重复计算的需求
                1、在while上方定义一个变量,用于存放最终计算结果
                2、在循环体内部,每次循环都用最新的计算结果,更新之前定义的变量
    break和continue
        break和continue是专门在循环中使用的关键字
        break:在某一条件满足时,退出循环,不再执行后续重复的代码
        continue:某一条件满足时,不执行后续的代码
        break和continue只针对当前循环所在有效
    while循环嵌套
        while嵌套就是: while里面还有while
            while 条件1:
                条件满足时,做的事情1
                条件满足时,做的事情2
                条件满足时,做的事情3
                ...
                while 条件2
                    条件满足时,做的事情1
                    条件满足时,做的事情2
                    条件满足时,做的事情3
                    ...
                    处理条件2
                处理条件1

        知识点: 对print函数做一个增强
            1、在默认情况下,print函数输出内容之后,会自动在内容末尾增加换行
            2、如果不希望末尾增加换行,可以在print函数输出的内容之后加, end=""
            3、其中“”中间可以指定print函数输出内容之后,继续希望显示的内容
                语法格式如下:
                    # 向控制台输出内容结束之后不会换行
                    print("*",end="")
                    # 单纯的换行
                    print("")
'''