'''
面向对象编程:
    把一组数据和处理数据的方法组成对象,把行为相同的对象归纳为类,通过封装隐藏对象的内部细节,通过继承实现类的特化和泛化,通过多态实现基于对象类型的动态分派.
    关键词:
        对象(Object)、类(class)、封装(encapsulation)、继承(inheritance)、多态(polymorphism)
    类和对象:
        在面向对象编程中,类是一个抽象的概念,对象是一个具体的概念.
        我们把同一类对象的共同特征抽取出来就是一个类,比如人类,这是一个抽象概念,而我们每个人就是人类这个抽象概念下实实在在的存在,也就是一个对象.
        简而言之,类是对象的蓝图和模板,对象是类的实例,是可以接收消息的实体.

        在面向对象编程的世界中,一切皆为对象,对象都有属性和行为,每个对象都是独一无二的,而且对象一定属于某个类.
        对象的属性是对象的静态特征,对象的行为是对象的动态特征
        按照上述说法,如果我们把拥有共同特征的对象的属性和行为都抽取出来,就可以定义出一个类.
'''

'''
定义类
    在Python中,可以使用class关键字加上类名来定义类,通过缩进我们可以确定类的代码块,就如同定义函数那样.
    在类的代码块中,我们需要写一些函数,我们说过类是一个抽象概念,那么这些函数就是我们对一类对象共同动态特征的提取.
    写在类里面的函数我们通常称之为方法,方法就是对象的行为,也就是对象可以接收的消息.
    方法的第一个参数通常都是 self 它代表了接收这个消息的对象本身.
'''