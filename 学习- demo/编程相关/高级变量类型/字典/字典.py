'''
字典
    字典的定义
        dictionary(字典) 是除列表以外Python中最灵活的数据类型
        字典同样可以用来存储多个数据
            通常用于存储描述一个物体的相关信息
        和列表的区别
            列表是有序的对象合集
            字典是无序的对象合集
        字典用 {} 定义
        字典使用 键值对 存储数据, 键值对之间用 , 分隔
            键 key 是索引
            值 value 是数据
            键和值之间使用 : 分隔
            键必须是唯一的
            值可以取任何数据类型,但键只能使用字符串、数字或元组
            例子:
                xiaoming = {'name' : '小明‘,
                            ’age‘ : 18,
                            ’gender‘ : True,
                            ’height‘ : 1.75}
        字典的操作
            len(字典)         获取字典的键值对数量
            字典.keys()       所有key列表
            字典.values()     所有value列表
            字典.items()      所有(key,value)元组列表
            字典[key]         可以从字典中取值,key不存在会报错
            字典.get(key)     可以从字典中取值,key不存在不会报错,会返回None
            del 字典[key]     删除指定键值对,key不存在会报错
            字典.pop(key)     删除指定键值对,key不存在会报错
            字典.popitem()    随机删除一个键值对
            字典.clear()      清空字典
            字典[key] = value
                如果key存在,修改数据
                如果key不存在,新建键值对
            字典.setdefault(key,value)
                如果key存在,不会修改数据
                如果key不存在,新建键值对
            字典.update(字典2)
                将字典2的数据合并到字典1   字典2的key不能与字典1冲突,否则不生效
            循环遍历
                遍历就是依次从字典中获取所有的键值对
                例子:
                    for k in xiaoming:
                        print('%s: %s' % (k, xiaoming[k]))
        应用场景:
            尽管可以使用 for in遍历字典
            但是在开发过程中,更多的应用场景是
                使用多个键值对,存储描述一个物体的相关信息 --- 描述更复杂的数据信息
                将多个字典放在一个列表中,再进行遍历,在循环体内部针对每一个字典进行相同的处理
                例子:
                    card_list = [{'name': 'zhangsan',
                                    'qq': '12345',
                                    'phone': '110'},
                                    {'name': 'lisi',
                                    'qq': '123',
                                    'phone': '120'}
                                    ]
'''